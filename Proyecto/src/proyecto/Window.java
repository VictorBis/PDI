/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyecto;

import java.awt.Desktop;
import java.awt.Image;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author VictorMolina
 */
public class Window extends javax.swing.JFrame {
    String path = "";   //file directory

    /**
     * Creates new form Window
     */
    public Window() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        original = new javax.swing.JLabel();
        file = new javax.swing.JButton();
        apply = new javax.swing.JButton();
        loading = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        original.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        file.setText("Seleccionar Imagen");
        file.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileActionPerformed(evt);
            }
        });

        apply.setText("Aplicar");
        apply.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                applyActionPerformed(evt);
            }
        });

        loading.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        loading.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(file)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(apply, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(original, javax.swing.GroupLayout.PREFERRED_SIZE, 533, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(233, 233, 233)
                        .addComponent(loading, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(62, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(original, javax.swing.GroupLayout.PREFERRED_SIZE, 453, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(file)
                    .addComponent(apply))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addComponent(loading, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    /**
     * This method resize the original size of the image to a
     * size that fits on the label
     * @param image - path of the image
     * @return an image that fits on the jlabel
     */
    private ImageIcon resizeOriginalImage(String image){
        ImageIcon myImage = new ImageIcon(image);
        Image img = myImage.getImage();
        Image newImg = img.getScaledInstance(original.getWidth(), original.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon finalImage = new ImageIcon(newImg);
        return finalImage;
    }
    
    /**
     * This method acts after the "seleccionar imagen" button is selected
     * Selects an image from the user's compueter
     * @param evt 
     */
    private void fileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileActionPerformed
        JFileChooser fileC = new JFileChooser();
        fileC.setDialogTitle("Selecciona una Imagen");
        //Filter to show only files jpg and bmp
        FileNameExtensionFilter filterExtension = new FileNameExtensionFilter("jpg,jpeg,bmp,png","jpg","jpeg","bmp","png");
        fileC.setFileFilter(filterExtension);
        int result = fileC.showOpenDialog(null);
        //check if the user selects the accept button
        if(result == JFileChooser.APPROVE_OPTION){
            File selectedFile = fileC.getSelectedFile();
            path = selectedFile.getAbsolutePath(); //pathOutput of the file
            original.setIcon(resizeOriginalImage(path)); //resize the original file an sets the final image to the labell
            loading.setText("");
        }
    }//GEN-LAST:event_fileActionPerformed

    private void applyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_applyActionPerformed
       //checks if an image has beeen seleected
        if(original.getIcon() == null){
            JOptionPane.showMessageDialog(null, "Selecciona una imagen");
        }
        loading.setText("Cargando...");
        Filter filter = new Filter(path);
        boolean err=true;
        String width;
        int x = 1;
        while(err){
            try{
                width = (String)JOptionPane.showInputDialog(null, "Introduce la Anchura del Mosaico",
                                "Ancho", JOptionPane.QUESTION_MESSAGE,null,null,"20");
                if(width == null) break;
                x = Integer.parseInt(width);
                err=false;
            }catch(NumberFormatException e){
                e.printStackTrace();
            }
        } 
        while(x<1){
            JOptionPane.showMessageDialog(null, "Selecciona un numero positivo","Error",JOptionPane.ERROR_MESSAGE);
            width = (String)JOptionPane.showInputDialog(null, "Introduce la Anchura del Mosaico",
                                "Ancho", JOptionPane.QUESTION_MESSAGE,null,null,"20");
            x = Integer.parseInt(width);
        }
        err = true;
        String height;
        int y = 1;
        while(err){
            try{
                height = (String)JOptionPane.showInputDialog(null, "Introduce la Altura del Mosaico",
                                "Alto", JOptionPane.QUESTION_MESSAGE,null,null,"20");
                if(height == null) break;
                y = Integer.parseInt(height);
                err=false;
            }catch(NumberFormatException e){
                e.printStackTrace();
            }
        } 
        while(y<1){
            JOptionPane.showMessageDialog(null, "Selecciona un numero positivo","Error",JOptionPane.ERROR_MESSAGE);
            height = (String)JOptionPane.showInputDialog(null, "Introduce la Altura del Mosaico",
                                "Alto", JOptionPane.QUESTION_MESSAGE,null,null,"20");
            y = Integer.parseInt(height);
        }
        File folder = new File("");
        JFileChooser selector = new JFileChooser();
        selector.setDialogTitle("Selecciona la carpeta con las imagenes a utilizar");
        selector.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int result = selector.showOpenDialog(null);
        if (result == JFileChooser.APPROVE_OPTION) {
            folder = selector.getSelectedFile();
        }
        String folderPath = folder.getPath();
        String name = (String)JOptionPane.showInputDialog(null, "Introduce el Nombre del archivo",
                                "Nombre", JOptionPane.QUESTION_MESSAGE,null,null,"Proyecto");
        if("".equals(name)) name = "Proyecto";
        folderPath = String.format("%s/%s.html", folderPath, name);
        FileWriter output = null;
        PrintWriter pw = null;
        JOptionPane.showMessageDialog(null, "El filtro puede tardar en aplicarse");
        try {
            output = new FileWriter(folderPath);
            pw = new PrintWriter(output);
            pw.println(filter.fotoMosaicos(x, y, folder));
            output.close();
        } catch (IOException e) {
            Logger.getLogger(Window.class.getName()).log(Level.SEVERE, null, e);
        }
        /* Opens the output automatically */
        File htmlFile = new File(folderPath);
        try {
            Desktop.getDesktop().browse(htmlFile.toURI());
        } catch (IOException ex) {
            Logger.getLogger(Window.class.getName()).log(Level.SEVERE, null, ex);
        }
        loading.setText("Terminado");
    }//GEN-LAST:event_applyActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton apply;
    private javax.swing.JButton file;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JLabel loading;
    private javax.swing.JLabel original;
    // End of variables declaration//GEN-END:variables
}
