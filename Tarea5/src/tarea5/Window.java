/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tarea5;

import java.awt.Dimension;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author VictorMolina
 */
public class Window extends javax.swing.JFrame {
    private String path = "";//path of the original image
    private final String pathOutput = "../../Downloads/Tarea5/output.jpg"; //resulting image path
    private Image outputImg; //resulting image

    /**
     * Creates new form Window
     */
    public Window() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        modified = new javax.swing.JLabel();
        original = new javax.swing.JLabel();
        fileButton = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        sepiaItem = new javax.swing.JMenuItem();
        esteganografíaItem = new javax.swing.JMenu();
        ocultarItem = new javax.swing.JMenuItem();
        descubrirItem = new javax.swing.JMenuItem();
        oleoItem = new javax.swing.JMenuItem();
        download = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        modified.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        original.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        fileButton.setText("Seleccionar Archivo");
        fileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileButtonActionPerformed(evt);
            }
        });

        jMenu1.setText("Filtro");

        sepiaItem.setText("Sepia");
        sepiaItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sepiaItemActionPerformed(evt);
            }
        });
        jMenu1.add(sepiaItem);

        esteganografíaItem.setText("Esteganografía");

        ocultarItem.setText("Ocultar");
        ocultarItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ocultarItemActionPerformed(evt);
            }
        });
        esteganografíaItem.add(ocultarItem);

        descubrirItem.setText("Descubrir");
        descubrirItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                descubrirItemActionPerformed(evt);
            }
        });
        esteganografíaItem.add(descubrirItem);

        jMenu1.add(esteganografíaItem);

        oleoItem.setText("Oleo");
        oleoItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                oleoItemActionPerformed(evt);
            }
        });
        jMenu1.add(oleoItem);

        jMenuBar1.add(jMenu1);

        download.setText("Descargar");
        download.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                downloadMouseClicked(evt);
            }
        });
        jMenuBar1.add(download);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(488, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(modified, javax.swing.GroupLayout.PREFERRED_SIZE, 459, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(19, 19, 19))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(fileButton, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(98, 98, 98))))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(16, 16, 16)
                    .addComponent(original, javax.swing.GroupLayout.PREFERRED_SIZE, 459, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(491, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(modified, javax.swing.GroupLayout.PREFERRED_SIZE, 405, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(fileButton)
                .addContainerGap(20, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(22, 22, 22)
                    .addComponent(original, javax.swing.GroupLayout.PREFERRED_SIZE, 405, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(65, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * This method resize the original size of the image to a
     * size that fits on the label
     * @param image - pathOutput of the image
     * @return an image that fits on the jlabel
     */
    private ImageIcon resizeImageString(String image){
        ImageIcon myImage = new ImageIcon(image);
        Image img = myImage.getImage();
        Image newImg = img.getScaledInstance(original.getWidth(), original.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon finalImage = new ImageIcon(newImg);
        return finalImage;
    }

    /**
     * This method resize an image
     * @param img - image to be resized
     * @return an image that fits on the jLabel
     */
    private ImageIcon resizeImage(Image img){
        Image newImg = img.getScaledInstance(original.getWidth(), original.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon finalImage = new ImageIcon(newImg);
        return finalImage;
    }

    /**
     * Method which acts after the Sepia option is selected
     * Calls the Sepia method and shows its result
     * @param evt
     */
    private void sepiaItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sepiaItemActionPerformed
        SepiaValue sv = new SepiaValue(this,true);
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        sv.setTitle("Sepia");
        sv.setLocation(dim.width/2-sv.getSize().width/2, dim.height/2-sv.getSize().height/2); //Center the window
        sv.setVisible(true);
        int sepia = sv.getValue(); //gets the quantity of bright selected by the euser
        Filter fB = new Filter(path);
        //checks if an image has beeen seleected
        if(original.getIcon() == null){
            JOptionPane.showMessageDialog(null, "Selecciona un archivo","Error",JOptionPane.ERROR_MESSAGE);
            return;
        }
        try {
            Image outputImage = fB.sepia(sepia);
            JOptionPane.showMessageDialog(null, "Proceso Terminado","",JOptionPane.INFORMATION_MESSAGE);
            outputImg = outputImage;
            modified.setIcon(resizeImage(outputImage));
        } catch (IOException ex) {
            Logger.getLogger(Window.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_sepiaItemActionPerformed

    /**
     * This method acts after the sleccionar archivo button is selected
     * Sets the path of the file choosen to the variable path
     * @param evt
     */
    private void fileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileButtonActionPerformed
        JFileChooser fileC = new JFileChooser();
        fileC.setDialogTitle("Selecciona una Imagen");
        //Filter to show only files jpg and bmp
        FileNameExtensionFilter filterExtension = new FileNameExtensionFilter("jpg,jpeg,bmp,png","jpg","jpeg","bmp","png");
        fileC.setFileFilter(filterExtension);
        int result = fileC.showOpenDialog(null);
        //check if the user selects the accept button
        if(result == JFileChooser.APPROVE_OPTION){
            File selectedFile = fileC.getSelectedFile();
            path = selectedFile.getAbsolutePath(); //pathOutput of the file
            original.setIcon(resizeImageString(path)); //resize the original file an sets the final image to the labell
            modified.setIcon(resizeImageString(path));
        }
    }//GEN-LAST:event_fileButtonActionPerformed
    
    /**
     * This method acts after the descargar button is selected
     * Download and save the resuting image in the users's computer
     * @param evt 
     */
    private void downloadMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_downloadMouseClicked
        // TODO add your handling code here:
        BufferedImage bI = (BufferedImage)outputImg;
        File f = new File(pathOutput);
        if(outputImg == null){
            JOptionPane.showMessageDialog(null, "Selecciona un filtro","Error",JOptionPane.ERROR_MESSAGE);
            return;
        }
        try {
            ImageIO.write(bI, "jpg", f);
            JOptionPane.showMessageDialog(null, "La imagen fue descargada con el nombre 'output.jpg'","Sepia",JOptionPane.INFORMATION_MESSAGE);

        } catch (IOException ex) {
            Logger.getLogger(Window.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_downloadMouseClicked

    private void oleoItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_oleoItemActionPerformed
        Filter fB = new Filter(path);
        //checks if an image has beeen seleected
        if(original.getIcon() == null){
            JOptionPane.showMessageDialog(null, "Selecciona un archivo","Error",JOptionPane.ERROR_MESSAGE);
            return;
        }
        try {
            Image outputImage = fB.oleo();
            JOptionPane.showMessageDialog(null, "Proceso Terminado","",JOptionPane.INFORMATION_MESSAGE);
            outputImg = outputImage;
            modified.setIcon(resizeImage(outputImage));
        } catch (IOException ex) {
            Logger.getLogger(Window.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_oleoItemActionPerformed
    
    /**
     * This method acts after the button Ocultar mensaje is selected
     * @param evt 
     */
    private void ocultarItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ocultarItemActionPerformed
        Text window = new Text(this,true);
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        window.setTitle("Sepia");
        window.setLocation(dim.width/2-window.getSize().width/2, dim.height/2-window.getSize().height/2); //Center the window
        window.setVisible(true);
        String message = window.getText();
        Filter fB = new Filter(path);
        //checks if an image has beeen seleected
        if(original.getIcon() == null){
            JOptionPane.showMessageDialog(null, "Selecciona un archivo","Error",JOptionPane.ERROR_MESSAGE);
            return;
        }
        try {
            Image outputImage = fB.hideMessage(message);
            JOptionPane.showMessageDialog(null, "Proceso Terminado","",JOptionPane.INFORMATION_MESSAGE);
            outputImg = outputImage;
            modified.setIcon(resizeImage(outputImage));
        } catch (IOException ex) {
            Logger.getLogger(Window.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_ocultarItemActionPerformed
    
    /**
     * This method acts after the button descubrir is selected
     * @param evt 
     */
    private void descubrirItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_descubrirItemActionPerformed
        Filter fB = new Filter(path);
        //checks if an image has beeen seleected
        if(original.getIcon() == null){
            JOptionPane.showMessageDialog(null, "Selecciona un archivo","Error",JOptionPane.ERROR_MESSAGE);
            return;
        }
        try {
            String message = fB.showMessage();
            JOptionPane.showMessageDialog(null, "Proceso Terminado","",JOptionPane.INFORMATION_MESSAGE);
            System.out.println(message);
        } catch (IOException ex) {
            Logger.getLogger(Window.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_descubrirItemActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem descubrirItem;
    private javax.swing.JMenu download;
    private javax.swing.JMenu esteganografíaItem;
    private javax.swing.JButton fileButton;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JLabel modified;
    private javax.swing.JMenuItem ocultarItem;
    private javax.swing.JMenuItem oleoItem;
    private javax.swing.JLabel original;
    private javax.swing.JMenuItem sepiaItem;
    // End of variables declaration//GEN-END:variables
}
