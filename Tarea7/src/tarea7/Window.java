/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tarea7;

import java.awt.Image;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author VictorMolina
 */
public class Window extends javax.swing.JFrame {
    private String path = ""; //source path

    /**
     * Creates new form Window
     */
    public Window() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        original = new javax.swing.JLabel();
        file = new javax.swing.JButton();
        modified = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        menu = new javax.swing.JMenu();
        azar = new javax.swing.JMenuItem();
        ordenado = new javax.swing.JMenuItem();
        disperso = new javax.swing.JMenuItem();
        error = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        original.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        file.setText("Seleccionar Archivo");
        file.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileActionPerformed(evt);
            }
        });

        modified.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        menu.setText("Filtro");

        azar.setText("Dithering al Azar");
        azar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                azarActionPerformed(evt);
            }
        });
        menu.add(azar);

        ordenado.setText("Dithering Ordenado");
        ordenado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ordenadoActionPerformed(evt);
            }
        });
        menu.add(ordenado);

        disperso.setText("Dithering Disperso");
        disperso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dispersoActionPerformed(evt);
            }
        });
        menu.add(disperso);

        error.setText("Difusi√≥n del Error");
        error.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                errorActionPerformed(evt);
            }
        });
        menu.add(error);

        jMenuBar1.add(menu);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(original, javax.swing.GroupLayout.PREFERRED_SIZE, 424, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(modified, javax.swing.GroupLayout.PREFERRED_SIZE, 429, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(file)
                .addGap(34, 34, 34))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(38, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(original, javax.swing.GroupLayout.PREFERRED_SIZE, 425, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(modified))
                .addGap(18, 18, 18)
                .addComponent(file)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void fileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileActionPerformed
        // TODO add your handling code here:
        JFileChooser fileC = new JFileChooser();
        fileC.setDialogTitle("Selecciona una Imagen");
        //Filter to show only files jpg and bmp
        FileNameExtensionFilter filterExtension = new FileNameExtensionFilter("jpg,jpeg,bmp,png","jpg","jpeg","bmp","png");
        fileC.setFileFilter(filterExtension);
        int result = fileC.showOpenDialog(null);
        //check if the user selects the accept button
        if(result == JFileChooser.APPROVE_OPTION){
            File selectedFile = fileC.getSelectedFile();
            path = selectedFile.getAbsolutePath(); //pathOutput of the file
            original.setIcon(resizeOriginalImage(path)); //resize the original file an sets the final image to the labell
            modified.setIcon(resizeOriginalImage(path));
        }
    }//GEN-LAST:event_fileActionPerformed
    
    /**
     * This method resize an image
     * @param img - image to be resized
     * @return an image that fits on the jLabel
     */
    private ImageIcon resizeImage(Image img){
        Image newImg = img.getScaledInstance(original.getWidth(), original.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon finalImage = new ImageIcon(newImg);
        return finalImage;
    }
    
    /**
     * This method applies the Dithering al azar filter to an image
     * @param evt 
     */
    private void azarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_azarActionPerformed
        // TODO add your handling code here:
        Filter fB = new Filter(path);
        //checks if an image has beeen seleected
        if(original.getIcon() == null){
            JOptionPane.showMessageDialog(null, "Selecciona un archivo","Error",JOptionPane.ERROR_MESSAGE);
            return;
        }
        try {
            Image outputImage = fB.azar();
            modified.setIcon(resizeImage(outputImage));
        } catch (IOException ex) {
            Logger.getLogger(Window.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_azarActionPerformed
    
     /**
     * This method applies the Dithering ordenado filter to an image
     * @param evt 
     */
    private void ordenadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ordenadoActionPerformed
        // TODO add your handling code here:
        Filter fB = new Filter(path);
        //checks if an image has beeen seleected
        if(original.getIcon() == null){
            JOptionPane.showMessageDialog(null, "Selecciona un archivo","Error",JOptionPane.ERROR_MESSAGE);
            return;
        }
        try {
            int [] array = {8,3,4,6,1,2,7,5,9}; ///cluster array
            Image outputImage = fB.dithering(array);
            modified.setIcon(resizeImage(outputImage));
        } catch (IOException ex) {
            Logger.getLogger(Window.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_ordenadoActionPerformed
    
     /**
     * This method applies the Difusion del error filter to an image
     * @param evt 
     */
    private void errorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_errorActionPerformed
        // TODO add your handling code here:
        Filter fB = new Filter(path);
        //checks if an image has beeen seleected
        if(original.getIcon() == null){
            JOptionPane.showMessageDialog(null, "Selecciona un archivo","Error",JOptionPane.ERROR_MESSAGE);
            return;
        }
        try {
            Image outputImage = fB.error();
            modified.setIcon(resizeImage(outputImage));
        } catch (IOException ex) {
            Logger.getLogger(Window.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_errorActionPerformed
    
    /**
     * This method applies the Dithering disperso filter to an image
     * @param evt 
     */
    private void dispersoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dispersoActionPerformed
        // TODO add your handling code here:
        Filter fB = new Filter(path);
        //checks if an image has beeen seleected
        if(original.getIcon() == null){
            JOptionPane.showMessageDialog(null, "Selecciona un archivo","Error",JOptionPane.ERROR_MESSAGE);
            return;
        }
        try {
            int [] array = {1,7,4,5,8,3,6,2,9};
            Image outputImage = fB.dithering(array);
            modified.setIcon(resizeImage(outputImage));
        } catch (IOException ex) {
            Logger.getLogger(Window.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_dispersoActionPerformed

     /**
     * This method resize the original size of the image to a
     * size that fits on the label
     * @param image - path of the image
     * @return an image that fits on the jlabel
     */
    private ImageIcon resizeOriginalImage(String image){
        ImageIcon myImage = new ImageIcon(image);
        Image img = myImage.getImage();
        Image newImg = img.getScaledInstance(original.getWidth(), original.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon finalImage = new ImageIcon(newImg);
        return finalImage;
    }
                                        
        

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem azar;
    private javax.swing.JMenuItem disperso;
    private javax.swing.JMenuItem error;
    private javax.swing.JButton file;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenu menu;
    private javax.swing.JLabel modified;
    private javax.swing.JMenuItem ordenado;
    private javax.swing.JLabel original;
    // End of variables declaration//GEN-END:variables
}
